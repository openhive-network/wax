"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class comment_reward(google.protobuf.message.Message):
    """Related to comment_operation.
    Generated during block processing after cashout time passes and comment is eligible for rewards (nonzero reward).
    Note: for informational purposes only, shows summary of comment reward, does not indicate any transfers.
    @see curation_reward_operation
    @see comment_benefactor_reward_operation
    @see author_reward_operation

    @param {string} author - author of the comment
    @param {string} permlink - permlink of the comment
    @param {asset} payout - (HBD) total value of comment reward recalculated to HBD
    @param {number} author_rewards - (HIVE satoshi) raw author reward (@see author_reward_operation) [is it needed?]
    @param {asset} total_payout_value - (HBD) overall author reward (from multiple cashouts prior to HF17) recalculated to HBD [is it needed?]
    @param {asset} curator_payout_value - (HBD) overall curation reward (from multiple cashouts prior to HF17) recalculated to HBD [is it needed?]
    @param {asset} beneficiary_payout_value - (HBD) overall beneficiary reward (from multiple cashouts prior to HF17) recalculated to HBD [is it needed?]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTHOR_FIELD_NUMBER: builtins.int
    PERMLINK_FIELD_NUMBER: builtins.int
    PAYOUT_FIELD_NUMBER: builtins.int
    AUTHOR_REWARDS_FIELD_NUMBER: builtins.int
    TOTAL_PAYOUT_VALUE_FIELD_NUMBER: builtins.int
    CURATOR_PAYOUT_VALUE_FIELD_NUMBER: builtins.int
    BENEFICIARY_PAYOUT_VALUE_FIELD_NUMBER: builtins.int
    author: builtins.str
    permlink: builtins.str
    @property
    def payout(self) -> asset_pb2.asset: ...
    author_rewards: builtins.int
    @property
    def total_payout_value(self) -> asset_pb2.asset: ...
    @property
    def curator_payout_value(self) -> asset_pb2.asset: ...
    @property
    def beneficiary_payout_value(self) -> asset_pb2.asset: ...
    def __init__(
        self,
        *,
        author: builtins.str | None = ...,
        permlink: builtins.str | None = ...,
        payout: asset_pb2.asset | None = ...,
        author_rewards: builtins.int | None = ...,
        total_payout_value: asset_pb2.asset | None = ...,
        curator_payout_value: asset_pb2.asset | None = ...,
        beneficiary_payout_value: asset_pb2.asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["author", b"author", "author_rewards", b"author_rewards", "beneficiary_payout_value", b"beneficiary_payout_value", "curator_payout_value", b"curator_payout_value", "payout", b"payout", "permlink", b"permlink", "total_payout_value", b"total_payout_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["author", b"author", "author_rewards", b"author_rewards", "beneficiary_payout_value", b"beneficiary_payout_value", "curator_payout_value", b"curator_payout_value", "payout", b"payout", "permlink", b"permlink", "total_payout_value", b"total_payout_value"]) -> None: ...

global___comment_reward = comment_reward
