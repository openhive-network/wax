"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import authority_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class account_create(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEE_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    NEW_ACCOUNT_NAME_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    MEMO_KEY_FIELD_NUMBER: builtins.int
    JSON_METADATA_FIELD_NUMBER: builtins.int
    @property
    def fee(self) -> asset_pb2.asset: ...
    creator: builtins.str
    new_account_name: builtins.str
    @property
    def owner(self) -> authority_pb2.authority: ...
    memo_key: builtins.str
    json_metadata: builtins.str
    def __init__(
        self,
        *,
        fee: asset_pb2.asset | None = ...,
        creator: builtins.str | None = ...,
        new_account_name: builtins.str | None = ...,
        owner: authority_pb2.authority | None = ...,
        memo_key: builtins.str | None = ...,
        json_metadata: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creator", b"creator", "fee", b"fee", "json_metadata", b"json_metadata", "memo_key", b"memo_key", "new_account_name", b"new_account_name", "owner", b"owner"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creator", b"creator", "fee", b"fee", "json_metadata", b"json_metadata", "memo_key", b"memo_key", "new_account_name", b"new_account_name", "owner", b"owner"]) -> None: ...

global___account_create = account_create
