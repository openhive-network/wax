"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class custom_json(google.protobuf.message.Message):
    """The operation custom_json_operation works similar as custom_operation,
    but it is designed to be human readable/developer friendly.
    The custom_json_operation is larger than custom_operation or custom_binary, that is why it costs more RC.
    It should be signed as required in { required_auths } or { required_posting_auths }. 
    The examples of custom_json_operation:
    - reblog
    - muted
    - pinned
    - follow

    @param {string} required_auths
    @param {string} required_posting_auths
    @param {string} id - Must be less than 32 characters long.
    @param {string} json - Must be a proper utf8 JSON string.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_AUTHS_FIELD_NUMBER: builtins.int
    REQUIRED_POSTING_AUTHS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    JSON_FIELD_NUMBER: builtins.int
    @property
    def required_auths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def required_posting_auths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    id: builtins.str
    json: builtins.str
    def __init__(
        self,
        *,
        required_auths: collections.abc.Iterable[builtins.str] | None = ...,
        required_posting_auths: collections.abc.Iterable[builtins.str] | None = ...,
        id: builtins.str | None = ...,
        json: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id", "json", b"json"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "json", b"json", "required_auths", b"required_auths", "required_posting_auths", b"required_posting_auths"]) -> None: ...

global___custom_json = custom_json
