"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class transfer_to_vesting_completed(google.protobuf.message.Message):
    """Related to transfer_to_vesting_operation.
    Generated every time above operation is executed. Supplements it with amount of VESTS received.
    Note: power up immediately increases mana regeneration and vote power for comments, but there is a grace period before
    it activates as governance vote power.
    @see delayed_voting
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FROM_ACCOUNT_FIELD_NUMBER: builtins.int
    TO_ACCOUNT_FIELD_NUMBER: builtins.int
    HIVE_VESTED_FIELD_NUMBER: builtins.int
    VESTING_SHARES_RECEIVED_FIELD_NUMBER: builtins.int
    from_account: builtins.str
    """@param {string} from_account - account that executed power up (source of hive_vested)"""
    to_account: builtins.str
    """@param {string} to_account - account that gets power up (receiver of vesting_shares_received)"""
    @property
    def hive_vested(self) -> asset_pb2.asset:
        """@param {asset} hive_vested - (HIVE) liquid funds being turned into VESTS"""
    @property
    def vesting_shares_received(self) -> asset_pb2.asset:
        """@param {asset} vesting_shares_received - (VESTS) result of power up"""
    def __init__(
        self,
        *,
        from_account: builtins.str | None = ...,
        to_account: builtins.str | None = ...,
        hive_vested: asset_pb2.asset | None = ...,
        vesting_shares_received: asset_pb2.asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["from_account", b"from_account", "hive_vested", b"hive_vested", "to_account", b"to_account", "vesting_shares_received", b"vesting_shares_received"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["from_account", b"from_account", "hive_vested", b"hive_vested", "to_account", b"to_account", "vesting_shares_received", b"vesting_shares_received"]) -> None: ...

global___transfer_to_vesting_completed = transfer_to_vesting_completed
