"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class collateralized_convert(google.protobuf.message.Message):
    """Similar to convert_operation, this operation instructs the blockchain to convert HIVE to HBD.
    The operation is performed after 3.5 days, but the owner gets HBD immediately.
    The price risk is cushioned by extra HIVE (HIVE_COLLATERAL_RATIO = 200 % ).
    After actual conversion takes place the excess HIVE is returned to the owner.

    Description https://gitlab.syncad.com/hive/hive/-/blob/develop/doc/devs/operations/48_collateralized_convert.md?ref_type=heads
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OWNER_FIELD_NUMBER: builtins.int
    REQUESTID_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    owner: builtins.str
    """@param {string} owner - Account name."""
    requestid: builtins.int
    """@param {number} requestid - The number is given by a user. Should be unique for a user."""
    @property
    def amount(self) -> asset_pb2.asset:
        """@param {asset} amount - Amount > 0, have to be in Hive."""
    def __init__(
        self,
        *,
        owner: builtins.str | None = ...,
        requestid: builtins.int | None = ...,
        amount: asset_pb2.asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amount", b"amount", "owner", b"owner", "requestid", b"requestid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "owner", b"owner", "requestid", b"requestid"]) -> None: ...

global___collateralized_convert = collateralized_convert
