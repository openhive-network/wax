"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import future_extensions_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import transaction_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class hardfork_version_vote(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HF_VERSION_FIELD_NUMBER: builtins.int
    HF_TIME_FIELD_NUMBER: builtins.int
    hf_version: builtins.str
    hf_time: builtins.str
    def __init__(
        self,
        *,
        hf_version: builtins.str | None = ...,
        hf_time: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hf_time", b"hf_time", "hf_version", b"hf_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hf_time", b"hf_time", "hf_version", b"hf_version"]) -> None: ...

global___hardfork_version_vote = hardfork_version_vote

@typing_extensions.final
class block_header_extensions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VOID_T_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    HARDFORK_VERSION_VOTE_FIELD_NUMBER: builtins.int
    @property
    def void_t(self) -> future_extensions_pb2.void_t: ...
    version: builtins.str
    @property
    def hardfork_version_vote(self) -> global___hardfork_version_vote: ...
    def __init__(
        self,
        *,
        void_t: future_extensions_pb2.void_t | None = ...,
        version: builtins.str | None = ...,
        hardfork_version_vote: global___hardfork_version_vote | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extension", b"extension", "hardfork_version_vote", b"hardfork_version_vote", "version", b"version", "void_t", b"void_t"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extension", b"extension", "hardfork_version_vote", b"hardfork_version_vote", "version", b"version", "void_t", b"void_t"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["extension", b"extension"]) -> typing_extensions.Literal["void_t", "version", "hardfork_version_vote"] | None: ...

global___block_header_extensions = block_header_extensions

@typing_extensions.final
class block(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PREVIOUS_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    WITNESS_FIELD_NUMBER: builtins.int
    TRANSACTION_MERKLE_ROOT_FIELD_NUMBER: builtins.int
    EXTENSIONS_FIELD_NUMBER: builtins.int
    WITNESS_SIGNATURE_FIELD_NUMBER: builtins.int
    TRANSACTIONS_FIELD_NUMBER: builtins.int
    BLOCK_ID_FIELD_NUMBER: builtins.int
    SIGNING_KEY_FIELD_NUMBER: builtins.int
    TRANSACTION_IDS_FIELD_NUMBER: builtins.int
    previous: builtins.str
    timestamp: builtins.str
    witness: builtins.str
    transaction_merkle_root: builtins.str
    @property
    def extensions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___block_header_extensions]: ...
    witness_signature: builtins.str
    @property
    def transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[transaction_pb2.transaction]: ...
    block_id: builtins.str
    signing_key: builtins.str
    @property
    def transaction_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        previous: builtins.str | None = ...,
        timestamp: builtins.str | None = ...,
        witness: builtins.str | None = ...,
        transaction_merkle_root: builtins.str | None = ...,
        extensions: collections.abc.Iterable[global___block_header_extensions] | None = ...,
        witness_signature: builtins.str | None = ...,
        transactions: collections.abc.Iterable[transaction_pb2.transaction] | None = ...,
        block_id: builtins.str | None = ...,
        signing_key: builtins.str | None = ...,
        transaction_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["block_id", b"block_id", "previous", b"previous", "signing_key", b"signing_key", "timestamp", b"timestamp", "transaction_merkle_root", b"transaction_merkle_root", "witness", b"witness", "witness_signature", b"witness_signature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["block_id", b"block_id", "extensions", b"extensions", "previous", b"previous", "signing_key", b"signing_key", "timestamp", b"timestamp", "transaction_ids", b"transaction_ids", "transaction_merkle_root", b"transaction_merkle_root", "transactions", b"transactions", "witness", b"witness", "witness_signature", b"witness_signature"]) -> None: ...

global___block = block
