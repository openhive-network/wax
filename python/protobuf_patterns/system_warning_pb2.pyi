"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class system_warning(google.protobuf.message.Message):
    """Related to block processing or selected operations.
    Generated every time something occurs that would normally be only visible to node operators in their logs
    but might be interesting to general HIVE community. Such vops can be observed on account history of 'initminer'.
    Currently the following generate system warnings:
     - unknown type of witness during block processing [should probably be FC_ASSERT]
       indicates some problem in the code
     - shortfall of collateral during finalization of HIVE->HBD conversion (@see fill_collateralized_convert_request_operation)
       the community covers the difference in form of tiny amount of extra inflation
     - artificial correction of internal price of HIVE due to hitting of HBD hard cap limit
       every operation that involves conversion from HBD to HIVE will give output amount that is smaller than real world value
     - noncanonical fee symbol used by witness [should disappear if it never happened as suggested by TODO message]
     - witnesses changed maximum block size
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    message: builtins.str
    """@param {string} message - warning message"""
    def __init__(
        self,
        *,
        message: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message", b"message"]) -> None: ...

global___system_warning = system_warning
