"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class limit_order_cancelled(google.protobuf.message.Message):
    """Related to limit_order_cancel_operation, limit_order_create_operation or limit_order_create2_operation.
    Generated every time existing limit order is cancelled. It happens on explicit call (first operation), or in rare case of
    filling limit order (second or third operation) when, after filling most of it, remaining funds are too small (would round
    to zero when sold). Finally also generated during block processing for orders that reached expiration time without being filled.
    @see fill_order
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SELLER_FIELD_NUMBER: builtins.int
    ORDERID_FIELD_NUMBER: builtins.int
    AMOUNT_BACK_FIELD_NUMBER: builtins.int
    seller: builtins.str
    """@param {string} seller - user that placed an order (receiver of amount_back)"""
    orderid: builtins.int
    """@param {number} orderid - id of the order"""
    @property
    def amount_back(self) -> asset_pb2.asset:
        """@param {asset} amount_back - (HIVE or HBD) remaining funds from original order that were not traded until cancellation"""
    def __init__(
        self,
        *,
        seller: builtins.str | None = ...,
        orderid: builtins.int | None = ...,
        amount_back: asset_pb2.asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amount_back", b"amount_back", "orderid", b"orderid", "seller", b"seller"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount_back", b"amount_back", "orderid", b"orderid", "seller", b"seller"]) -> None: ...

global___limit_order_cancelled = limit_order_cancelled
