"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asset_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class producer_reward(google.protobuf.message.Message):
    """Related to block processing.
    Generated during block processing every block for current witness.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCER_FIELD_NUMBER: builtins.int
    VESTING_SHARES_FIELD_NUMBER: builtins.int
    producer: builtins.str
    """@param {string} producer - witness (receiver of vesting_shares)"""
    @property
    def vesting_shares(self) -> asset_pb2.asset:
        """@param {asset} vesting_shares - (VESTS or HIVE) reward for block production (HIVE only during first 30 days after genesis)"""
    def __init__(
        self,
        *,
        producer: builtins.str | None = ...,
        vesting_shares: asset_pb2.asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["producer", b"producer", "vesting_shares", b"vesting_shares"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["producer", b"producer", "vesting_shares", b"vesting_shares"]) -> None: ...

global___producer_reward = producer_reward
